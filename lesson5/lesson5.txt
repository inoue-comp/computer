第五回　リストについて

・リストの扱い
　ゲーム作成において(ビジネスにおいても)データをわかりやすくコンパクトにまとめることは必須のテクニック。
　例えば、RPGでは"アイテム"や"どうぐ"のようなメニューからキャラクターの持ち物にアクセスすることが多いが、
　このようなメニューがなければ管理が大変すぎてやってられない。こういうデータをまとめるための技法の紹介。

・リスト(配列)
　配列(array:アレイ)と言われることが多いが、pythonではリストという。
　数学でいう数列、ベクトルや行列、テンソルをうまく扱えるのがリストで、大量の情報を同時並行で扱う機械学習ではなくてはならない要素でもある。
　補足:ここではベクトル(1階テンソル)とは(1,3,5,7,9,…)というような一次元のデータの塊を指す。高校数学では要素数3までのベクトルを扱う。
　　　行列(2階テンソル)は
	[1,3,5,7]...
	[2,4,6,8]
	[3,7,9,11]
	[4,6,8,10]
　　...
　と二次元方向に広がるデータを指す。n階テンソルはn次元方向に広がるデータで、人間ではなかなかとらえられない。

・lesson5_1
　・まずは実行してみる
　　ここではfruitsという変数に、りんご、バナナ、みかんという3つの値が代入されている。
　　fruitsは要素数3のリストだといえる。
	変数をリストにするときは、hoge=[]の形で各括弧で値を代入する。
	一度変数をリストに指定すると、リストを再作成しない限り、そのリストは変化しない。
	ただし、リストに値を追加・削除・並び替えなどをすることはできる。
	リストは先頭から順番に0から番号が割り振られる。これをインデックス(index:索引)と呼ぶ。
　　fruits[0]は0番を呼び、fruits[1]は1番を呼び、fruits[2]は2番を呼ぶ。
	今回は0番に"りんご"が格納されているのでfruits[0]は"りんご"を呼ぶ。
	len(fruits)はリストの要素数を返す関数。fruitsは要素数3のリストなので、3という値を得る。

　・演習!
	・好きな教科3つのリストを作り、1つずつ表示する

・lesson5_2
	リストの各種操作をまとめている。
　・まずは実行してみる。
	これらの操作は別に覚えてなくても、その都度検索して確認すればよい。
	ただ、どのような操作ができるのかは知っておいた方がいい。
　　最後だけ注意。
　　リストの中にリストを格納した場合、要素としてのリストを呼び出すと、そのリストの要素が全て羅列される。
　　list[i][j]の形でリストの中のリストの要素の指定ができる。これは南海層でも重ねられる(テンソル表現)
	
・lesson5_3
　・まずは実行してみる。
	fruitとはなんぞや?　(宣言されているのは"fruits"だけ!)
	→forではじめて定義されている一時変数。惑わされないように。
	配列の中身を一つ一つ取り出して利用し、配列の先頭から末尾までループしている。
	☆forはこういう使い方もできます。

・lesson5_4
　・ソースコードをよく読む。
player = {
    "名前": "ゆうた",
    "HP": 100,
    "アイテム": ["ポーション", "たいまつ"]
}
 この形はdict形式(辞書形式)といい、タグと中身に分かれている。
 タグをつける意味はプログラム側にはないが、開発側はついていると扱いやすい。
 
・lesson5_5
	・ソースコードをよく読む。 
	・実行してみて結果を確認する。
	・特にfor周りの記述に注意。
	
・演習
・lesson5_5を参考に、5個のアイテムを消費して終了するようなスクリプトを作成すること。





