Lesson4　前回の復習

if文
	if (条件式):
		(実施処理)
	elif (条件式):
		(実施処理)	
	else:
		(実施処理)		

今回の学習内容

while文 for文による繰り返し処理
	while:条件が満たされている間は処理を繰り返す
	for:カウンターが特定の値の間は処理を繰り返す

・lesson4_1
　・まずは実行
　	count < 5　という条件が満たされている「限り」、インデント下の処理を実行し続ける。
	count += 1　はcount = count + 1　の省略形
	※注意!　この命令文は容易に「無限ループ」が発生します使用には注意を払ってください。
	実行前には打ち込んだ命令文の保存を忘れずに!

>>演習:10回書き出すように処理を変更せよ。

・lesson4_2
　・まずは実行
　range()の値だけ処理を繰り返す繰り返し処理
　定数でも変数でも指定できるため、"10回だけ実行したい"とか"ファルダの中のファイルを順に表示したい"などの場合にも利用できる。

>>演習:10回書き出すように処理を変更せよ。

・lesson4_3
　・まずは実行
　import random　randomパッケージをインポート。疑似乱数関係の処理をサポートする。
　random.randint(1,10)　1から10の整数をランダムに得る関数。
　!=　否定演算子。左右の値が異なっていればTrue,同じであればFalseを返す。

・lesson4_4
　・まずは実行。
　fizzbuzzゲームを実行するプログラム。数を数え上げていくが、3の倍数でfizz(フィズ),5の倍数でbuzz(バズ)、15の倍数でfizz buzz(フィズバズ)と言わないといけない、という時間つぶしゲーム(英語圏)
　ちなみにfizzもbuzzも特に意味がない。日本だと類似するのはせんだみつおゲーム/世界のナベアツくらいか(知ってる?)
　%は剰余をとる演算。% 15 == 0 で、15で割ったあまりが0のとき…という計算。
　if文は実行順序がある。上から実行されるので、15の倍数判定→3の倍数判定→5の倍数判定で取りこぼしがない。
　この順序が違っていたらどうなる?
　このfizzbuzzプログラムはプログラマ界隈でプログラム経験がゼロの「自称経験者」をはじき出すためによく使われるコードテスト。3分以内に書いて、などの制限がつけられることが多い。

>>演習:1から50まで書き出し、5の倍数の時はfoo,7の倍数の時はbar,5と7の公倍数の時はfoobarと書き出すように処理を変更せよ。
　※ちなみにfoo,barともにメタ構文識別子と呼ばれる「特に意味がない単語」として運用される特徴的な単語。
　同様の単語にquxがあるが、quxは二つ目はquux,三つ目はquuux,四つ目はquuuuxとuを増やして運用される。どこかで聞いたことがありますね(この春で終わりましたが…)



　